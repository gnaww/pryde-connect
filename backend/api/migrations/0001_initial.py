# Generated by Django 2.2.2 on 2019-06-27 14:19

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='PUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(default=None, max_length=128, null=True, region=None)),
                ('website', models.URLField(default=None, null=True)),
                ('role', models.IntegerField(choices=[(1, '4H Educator'), (2, 'Other CCE Role'), (3, 'Practice Focused Role'), (4, 'Cornell Faculty'), (5, 'Cornell Student'), (6, 'Research Focused Role')], default=None, null=True)),
                ('college', models.CharField(default=None, max_length=30, null=True)),
                ('department', models.CharField(default=None, max_length=30, null=True)),
                ('institution', models.CharField(default=None, max_length=30, null=True)),
                ('location', models.CharField(default=None, max_length=30, null=True)),
                ('role2', models.IntegerField(choices=[(1, 'Faculty'), (2, 'Academic Staff'), (3, 'Postdoctoral Fellow'), (4, 'Grad Student'), (5, 'Undergrad Student')], default=None, null=True)),
                ('topics', models.CharField(default=None, max_length=200, null=True)),
                ('research_interests', models.CharField(default=None, max_length=1000, null=True)),
                ('is_coop', models.BooleanField(default=False)),
                ('role3', models.CharField(default=None, max_length=200, null=True)),
                ('age_work_with', models.CharField(default=None, max_length=200, null=True)),
                ('type_youth_programs', models.CharField(default=None, max_length=200, null=True)),
                ('program_delivery_models', models.CharField(default=None, max_length=200, null=True)),
                ('research_needs', models.CharField(default=None, max_length=2000, null=True)),
                ('evaluation_needs', models.CharField(default=None, max_length=2000, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_study', models.CharField(max_length=100)),
                ('collaborators', models.CharField(max_length=100)),
                ('status', models.BooleanField()),
                ('research_topics', models.CharField(max_length=100)),
                ('age_youth', models.CharField(max_length=100)),
                ('goal', models.CharField(max_length=100)),
                ('timeline', models.CharField(max_length=100)),
                ('participant_involvement', models.CharField(max_length=100)),
                ('incentives', models.CharField(max_length=100)),
                ('incentives_participants', models.CharField(max_length=100)),
                ('delivery_models', models.CharField(max_length=100)),
                ('additional_desc', models.CharField(default=None, max_length=100, null=True)),
                ('website', models.CharField(default=None, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
